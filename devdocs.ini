#
# DevDocs Package configuration file
# More info at http://keypirinha.com
#

# NOTE TO PLUGIN DEVELOPER:
# * This file may be removed from the package if no plugin requires
#   configuration
# * The [main] section below is an example and not mandatory, however it is good
#   practice to keep the [var] and [env] sections, as well as their respective
#   comments
# * This comment block may be removed!

[main]
# Plugin's main configuration section

# How often should the documentation database be updated, the documentation
# database is a sqlite database that contains all the documentation available
# on devdocs.int
# * There is a `service`, cache service, that handles actions like,
#   * What Documentation is currently available on devdocs.io
#   * Generating the Sqlite database, which contains the available documentations
# * Available values are:
#   * off: Basically the database is not used here, the cache service will lookup
#       documentation realtime from devdocs.io, will not cache the results
#       for offline use.
#   * onstart: will lookup the available documentations and generate a SQL file
#       each time keypirinha starts.
# * Default: "onstart" (without quotes)
cache_method = off

# Will determine if the cache service will also cache the documentation contents
# titles, if `second level` is enabled the cache service will, for example, cache
# `php` and all the topics under the `php` documentation.
# * This only caches titles, plus since devdocs.io itself is offline friendly.
# * `cache_method` should not be off for this functionality to work.
# * Available values are:
#   * firstlevel: Will only cache available documentation, so after finding out
#       which documentation to look for, you can
#   * secondlevel: Will cache available documentation and including their topics,
# * Default: "firstlevel" (without quotes)
cache_level = firstlevel

# [WIP]
# When you open a documentation class, i.e. `php`, your clipboard would be
# copied to the search input so you can find what you're looking for faster.
# * Default: no
copy_from_clipboard = yes

# Copy the contents of the clipboard
# * Available values are:
#   * firstlevel: Will only cache available documentation, so after finding out
#       which documentation to look for, you can
#   * secondlevel: Will cache available documentation and including their topics,
# * Default: "secondlevel" (without quotes)
copy_from_clipboard_to = "secondlevel"

# A list of documentation to only include for the search
include_documentation = css, javascript

# A list of documentation to exclude form the search
exclude_documentation = java

[var]
# As in every Keypirinha's configuration file, you may optionally include a
# [var] section to declare variables that you want to reuse anywhere else in
# this file.
#
# Note that the [var] section is inherited, which means that any value defined
# in the main configuration file of the application (i.e.: "Keypirinha.ini") has
# already been made available to this file as well so you do not need to
# duplicate it here unless you want to override it.
#
# REMINDER: For convenience, Keypirinha silently populates this section with
# predefined values that may come handy. Here are some of them: APP_DIR,
# APP_EXE, PROFILE_DIR, PROFILE_DIR_INSTALLED_PACKS, PROFILE_DIR_LIVE_PACKS,
# PROFILE_DIR_USER and the KNOWNFOLDER_* and KNOWNFOLDERGUID_* values.
#
# See the "Configuration" chapter of the documentation for more information.


[env]
# For convenience, Keypirinha populates this [env] section in every loaded
# configuration file so you can easily access to environment variables like
# PATH for example from this file using syntax: ${env:PATH}
#
# If an environment variable happens to be changed while Keypirinha is running
# and this modification impacts current configuration, application and packages
# configuration will be reloaded if needed only.
#
# See the "Configuration" chapter of the documentation for more information.
